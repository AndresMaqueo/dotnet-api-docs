<Type Name="ScenarioRunResult" FullName="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult">
  <TypeSignature Language="C#" Value="public sealed class ScenarioRunResult" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ScenarioRunResult extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ScenarioRunResult" />
  <TypeSignature Language="F#" Value="type ScenarioRunResult = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScenarioRunResult sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-8.0-pp">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScenarioRunResult (string scenarioName, string iterationName, string executionName, DateTime creationTime, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.ChatMessage&gt; messages, Microsoft.Extensions.AI.ChatMessage modelResponse, Microsoft.Extensions.AI.Evaluation.EvaluationResult evaluationResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scenarioName, string iterationName, string executionName, valuetype System.DateTime creationTime, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.AI.ChatMessage&gt; messages, class Microsoft.Extensions.AI.ChatMessage modelResponse, class Microsoft.Extensions.AI.Evaluation.EvaluationResult evaluationResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.#ctor(System.String,System.String,System.String,System.DateTime,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatMessage,Microsoft.Extensions.AI.Evaluation.EvaluationResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scenarioName As String, iterationName As String, executionName As String, creationTime As DateTime, messages As IEnumerable(Of ChatMessage), modelResponse As ChatMessage, evaluationResult As EvaluationResult)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult : string * string * string * DateTime * seq&lt;Microsoft.Extensions.AI.ChatMessage&gt; * Microsoft.Extensions.AI.ChatMessage * Microsoft.Extensions.AI.Evaluation.EvaluationResult -&gt; Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" Usage="new Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult (scenarioName, iterationName, executionName, creationTime, messages, modelResponse, evaluationResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScenarioRunResult(System::String ^ scenarioName, System::String ^ iterationName, System::String ^ executionName, DateTime creationTime, System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::AI::ChatMessage ^&gt; ^ messages, Microsoft::Extensions::AI::ChatMessage ^ modelResponse, Microsoft::Extensions::AI::Evaluation::EvaluationResult ^ evaluationResult);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scenarioName" Type="System.String" />
        <Parameter Name="iterationName" Type="System.String" />
        <Parameter Name="executionName" Type="System.String" />
        <Parameter Name="creationTime" Type="System.DateTime" />
        <Parameter Name="messages" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.AI.ChatMessage&gt;" />
        <Parameter Name="modelResponse" Type="Microsoft.Extensions.AI.ChatMessage" />
        <Parameter Name="evaluationResult" Type="Microsoft.Extensions.AI.Evaluation.EvaluationResult" />
      </Parameters>
      <Docs>
        <param name="scenarioName">To be added.</param>
        <param name="iterationName">To be added.</param>
        <param name="executionName">To be added.</param>
        <param name="creationTime">To be added.</param>
        <param name="messages">To be added.</param>
        <param name="modelResponse">To be added.</param>
        <param name="evaluationResult">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScenarioRunResult (string scenarioName, string iterationName, string executionName, DateTime creationTime, System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; messages, Microsoft.Extensions.AI.ChatMessage modelResponse, Microsoft.Extensions.AI.Evaluation.EvaluationResult evaluationResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scenarioName, string iterationName, string executionName, valuetype System.DateTime creationTime, class System.Collections.Generic.IList`1&lt;class Microsoft.Extensions.AI.ChatMessage&gt; messages, class Microsoft.Extensions.AI.ChatMessage modelResponse, class Microsoft.Extensions.AI.Evaluation.EvaluationResult evaluationResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.#ctor(System.String,System.String,System.String,System.DateTime,System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatMessage,Microsoft.Extensions.AI.Evaluation.EvaluationResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scenarioName As String, iterationName As String, executionName As String, creationTime As DateTime, messages As IList(Of ChatMessage), modelResponse As ChatMessage, evaluationResult As EvaluationResult)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult : string * string * string * DateTime * System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; * Microsoft.Extensions.AI.ChatMessage * Microsoft.Extensions.AI.Evaluation.EvaluationResult -&gt; Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" Usage="new Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult (scenarioName, iterationName, executionName, creationTime, messages, modelResponse, evaluationResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScenarioRunResult(System::String ^ scenarioName, System::String ^ iterationName, System::String ^ executionName, DateTime creationTime, System::Collections::Generic::IList&lt;Microsoft::Extensions::AI::ChatMessage ^&gt; ^ messages, Microsoft::Extensions::AI::ChatMessage ^ modelResponse, Microsoft::Extensions::AI::Evaluation::EvaluationResult ^ evaluationResult);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonConstructor]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonConstructor&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="scenarioName" Type="System.String" />
        <Parameter Name="iterationName" Type="System.String" />
        <Parameter Name="executionName" Type="System.String" />
        <Parameter Name="creationTime" Type="System.DateTime" />
        <Parameter Name="messages" Type="System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt;" />
        <Parameter Name="modelResponse" Type="Microsoft.Extensions.AI.ChatMessage" />
        <Parameter Name="evaluationResult" Type="Microsoft.Extensions.AI.Evaluation.EvaluationResult" />
      </Parameters>
      <Docs>
        <param name="scenarioName">To be added.</param>
        <param name="iterationName">To be added.</param>
        <param name="executionName">To be added.</param>
        <param name="creationTime">To be added.</param>
        <param name="messages">To be added.</param>
        <param name="modelResponse">To be added.</param>
        <param name="evaluationResult">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreationTime">
      <MemberSignature Language="C#" Value="public DateTime CreationTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime CreationTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.CreationTime" />
      <MemberSignature Language="VB.NET" Value="Public Property CreationTime As DateTime" />
      <MemberSignature Language="F#" Value="member this.CreationTime : DateTime with get, set" Usage="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.CreationTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime CreationTime { DateTime get(); void set(DateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluationResult">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.Evaluation.EvaluationResult EvaluationResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.AI.Evaluation.EvaluationResult EvaluationResult" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.EvaluationResult" />
      <MemberSignature Language="VB.NET" Value="Public Property EvaluationResult As EvaluationResult" />
      <MemberSignature Language="F#" Value="member this.EvaluationResult : Microsoft.Extensions.AI.Evaluation.EvaluationResult with get, set" Usage="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.EvaluationResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::AI::Evaluation::EvaluationResult ^ EvaluationResult { Microsoft::Extensions::AI::Evaluation::EvaluationResult ^ get(); void set(Microsoft::Extensions::AI::Evaluation::EvaluationResult ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.Evaluation.EvaluationResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutionName">
      <MemberSignature Language="C#" Value="public string ExecutionName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExecutionName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.ExecutionName" />
      <MemberSignature Language="VB.NET" Value="Public Property ExecutionName As String" />
      <MemberSignature Language="F#" Value="member this.ExecutionName : string with get, set" Usage="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.ExecutionName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExecutionName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IterationName">
      <MemberSignature Language="C#" Value="public string IterationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IterationName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.IterationName" />
      <MemberSignature Language="VB.NET" Value="Public Property IterationName As String" />
      <MemberSignature Language="F#" Value="member this.IterationName : string with get, set" Usage="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.IterationName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IterationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Messages">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; Messages { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Extensions.AI.ChatMessage&gt; Messages" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.Messages" />
      <MemberSignature Language="VB.NET" Value="Public Property Messages As IList(Of ChatMessage)" />
      <MemberSignature Language="F#" Value="member this.Messages : System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt; with get, set" Usage="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.Messages" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Extensions::AI::ChatMessage ^&gt; ^ Messages { System::Collections::Generic::IList&lt;Microsoft::Extensions::AI::ChatMessage ^&gt; ^ get(); void set(System::Collections::Generic::IList&lt;Microsoft::Extensions::AI::ChatMessage ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Extensions.AI.ChatMessage&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelResponse">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.AI.ChatMessage ModelResponse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.AI.ChatMessage ModelResponse" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.ModelResponse" />
      <MemberSignature Language="VB.NET" Value="Public Property ModelResponse As ChatMessage" />
      <MemberSignature Language="F#" Value="member this.ModelResponse : Microsoft.Extensions.AI.ChatMessage with get, set" Usage="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.ModelResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::AI::ChatMessage ^ ModelResponse { Microsoft::Extensions::AI::ChatMessage ^ get(); void set(Microsoft::Extensions::AI::ChatMessage ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.AI.ChatMessage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScenarioName">
      <MemberSignature Language="C#" Value="public string ScenarioName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScenarioName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.ScenarioName" />
      <MemberSignature Language="VB.NET" Value="Public Property ScenarioName As String" />
      <MemberSignature Language="F#" Value="member this.ScenarioName : string with get, set" Usage="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.ScenarioName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScenarioName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.AI.Evaluation.Reporting</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
